openapi: 3.0.3
info:
  title: Structurio Auth API
  version: 1.0.0
  description: Nur Check-Email,Try-Login Endpoints
servers:
  - url: http://localhost:8080

paths:
  /auth/check-email:
    post:
      summary: Prüfe ob E-Mail existiert
      operationId: auth_check_email_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequest'
      responses:
        "200":
          description: Existenzprüfung durchgeführt
      x-openapi-router-controller: openapi_server.controllers.user_controller

  /auth/login:
    post:
      summary: Benutzer einloggen
      operationId: auth_login_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: Login erfolgreich
        "401":
          description: Fehlerhafte Zugangsdaten
      x-openapi-router-controller: openapi_server.controllers.user_controller


  /timestamps:
    get:
      summary: Alle Zeitstempel abrufen
      operationId: get_all_timestamps

      responses:
        "200":
          description: Liste aller Zeitstempel
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Timestamp'
      x-openapi-router-controller: openapi_server.controllers.timestamp_controller

    post:
      summary: Neuen Zeitstempel anlegen
      operationId: openapi_server.controllers.timestamp_controller.create_timestamp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimestampRequest'
      responses:
        "201":
          description: Zeitstempel erfolgreich erstellt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timestamp'
        "400":
          description: Ungültige Eingabedaten
      

  /timestamps/{zid}:
    parameters:
      - name: zid
        in: path
        description: ID des Zeitstempels
        required: true
        schema:
          type: integer

    get:
      summary: Einzelnen Zeitstempel nach ID abrufen
      operationId: openapi_server.controllers.timestamp_controller.get_timestamp_by_id
      responses:
        "200":
          description: Zeitstempel gefunden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timestamp'
        "404":
          description: Zeitstempel nicht gefunden
   

    put:
      summary: Bestehenden Zeitstempel aktualisieren
      operationId: openapi_server.controllers.timestamp_controller.update_timestamp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimestampRequest'
      responses:
        "200":
          description: Zeitstempel erfolgreich aktualisiert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timestamp'
        "400":
          description: Ungültige Eingabedaten
        "404":
          description: Zeitstempel nicht gefunden
   


components:
  schemas:
    EmailRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string
          format: email
          example: max@example.com

    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
          example: max@example.com
        password:
          type: string
          format: password
          example: pass123
     


    Timestamp:
      type: object
      properties:
        zid:
          type: integer
          description: Eindeutige ID des Zeitstempels
          example: 3
        uid:
          type: integer
          description: ID des Benutzers (User-Foreign Key)
          example: 2
        pid:
          type: integer
          description: ID des Projekts (Project-Foreign Key)
          example: 5
        checkin:
          type: string
          format: time
          description: Check‐In‐Uhrzeit
          example: "07:30:00"
        checkout:
          type: string
          format: time
          description: Check‐Out‐Uhrzeit
          example: "15:30:00"
        datum_out:
          type: string
          format: date
          description: Datum für Check‐Out
          example: "2025-05-04"
        datum_in:
          type: string
          description: Datum für Check‐In (Textfeld)
          example: "2025-05-03"
        duration:
          type: string
          description: Berechnete Dauer (z. B. "8h")
          example: "8h"
        user:
          type: string
          description: Benutzername (optional, relational befüllt)
          example: "max"
        project:
          type: string
          description: Projektname (optional, relational befüllt)
          example: "project-alpha"
      required:
        - zid
        - uid
        - pid
        - checkin
        - checkout
        - datum_out
        - datum_in
        - duration

    TimestampRequest:
      type: object
      required:
        - uid
        - pid
        - checkin
        - checkout
        - datum_out
        - datum_in
        - duration
      properties:
        uid:
          type: integer
          description: ID des Benutzers (User-Foreign Key)
          example: 2
        pid:
          type: integer
          description: ID des Projekts (Project-Foreign Key)
          example: 5
        checkin:
          type: string
          format: time
          description: Check‐In‐Uhrzeit
          example: "07:30:00"
        checkout:
          type: string
          format: time
          description: Check‐Out‐Uhrzeit
          example: "15:30:00"
        datum_out:
          type: string
          format: date
          description: Datum für Check‐Out
          example: "2025-05-04"
        datum_in:
          type: string
          description: Datum für Check‐In
          example: "2025-05-03"
        duration:
          type: string
          description: Berechnete Dauer (z. B. "8h")
          example: "8h"