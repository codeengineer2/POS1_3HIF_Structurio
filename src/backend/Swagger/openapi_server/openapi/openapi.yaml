openapi: 3.0.3
info:
  title: Structurio Auth API
  version: 1.0.0
  description: Nur Check-Email, Try-Login, Register, Projects Endpoints

servers:
  - url: http://localhost:8080

paths:
  /auth/check-email:
    post:
      summary: Prüfe ob E-Mail existiert
      operationId: auth_check_email_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequest'
      responses:
        "200":
          description: Existenzprüfung durchgeführt
        "404":
          description: E-Mail nicht gefunden
        "500":
          description: Interner Serverfehler
      x-openapi-router-controller: openapi_server.controllers.user_controller

  /auth/login:
    post:
      summary: Benutzer einloggen
      operationId: auth_login_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: Login erfolgreich
        "401":
          description: Fehlerhafte Daten
        "500":
          description: Interner Serverfehler
      x-openapi-router-controller: openapi_server.controllers.user_controller

  /auth/register:
    post:
      summary: Benutzer registrieren
      operationId: auth_register_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        "201":
          description: Erfolgreich registriert
        "409":
          description: E-Mail existiert bereits
        "400":
          description: Ungültige Eingabedaten
        "500":
          description: Interner Serverfehler
      x-openapi-router-controller: openapi_server.controllers.user_controller

  /projects:
    post:
      summary: Neues Projekt mit leerem Board erstellen
      operationId: create_project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        "201":
          description: Projekt erfolgreich erstellt
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  pid:
                    type: integer
                    example: 42
        "400":
          description: Ungültige Eingabe
        "500":
          description: Interner Serverfehler
      x-openapi-router-controller: openapi_server.controllers.project_controller

  /timestamps/{uid}/{pid}:
    get:
      summary: Alle Zeitstempel für einen Benutzer und ein Projekt abrufen
      operationId: get_timestamps_by_user_project
      parameters:
        - name: uid
          in: path
          description: ID des Benutzers
          required: true
          schema:
            type: integer
        - name: pid
          in: path
          description: ID des Projekts
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Liste der Zeitstempel (nur Datum und Uhrzeiten)
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    datum_in:
                      type: string
                      format: date
                      description: Datum des Check-ins
                    checkin:
                      type: string
                      format: time
                      description: Uhrzeit des Check-ins
                    datum_out:
                      type: string
                      format: date
                      description: Datum des Check-outs
                    checkout:
                      type: string
                      format: time
                      description: Uhrzeit des Check-outs
                    duration:
                      type: string
                      description: Dauer im Format hh:mm
                  required:
                    - datum_in
                    - checkin
                    - datum_out
                    - checkout
                    - duration
      x-openapi-router-controller: openapi_server.controllers.timestamp_controller


  

  /timestamps/{uid}/{pid}/{zid}:
    put:
      summary: Check-out eines bestehenden Zeitstempels
      operationId: update_timestamp
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: integer
        - name: pid
          in: path
          required: true
          schema:
            type: integer
        - name: zid
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                datum_in:
                  type: string
                  format: date
                checkin:
                  type: string
                  format: time
                datum_out:
                  type: string
                  format: date
                checkout:
                  type: string
                  format: time
                duration:
                  type: string
              required:
                - datum_in
                - checkin
                - datum_out
                - checkout
                - duration
      responses:
        "200":
          description: Zeitstempel erfolgreich aktualisiert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timestamp'
      x-openapi-router-controller: openapi_server.controllers.timestamp_controller
  /timestamps:
    post:
      summary: Neuen Zeitstempel (Check-in) anlegen
      operationId: create_timestamp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimestampRequest'
      responses:
        "201":
          description: Zeitstempel angelegt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timestamp'
      x-openapi-router-controller: openapi_server.controllers.timestamp_controller
  /abrechnung/{uid}/{pid}:
    
    get:
      summary: Liste aller Abrechnungen
      operationId: get_abrechnungen
      x-openapi-router-controller: openapi_server.controllers.abrechnung_controller
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: integer
          description: Benutzer-ID
        - name: pid
          in: path
          required: true
          schema:
            type: integer
          description: Projekt-ID
      responses:
        '200':
          description: Erfolgreiche Antwort mit Abrechnungs-Liste
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Abrechnung'
        '400':
          description: Ungültige Eingabedaten
    
components:
  schemas:
    EmailRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string
          format: email
          example: max@example.com

    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
          example: max@example.com
        password:
          type: string
          format: password
          example: pass123

    RegisterRequest:
      type: object
      required: [firstname, lastname, email, password, birthdate]
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
          format: email
          example: max@example.com
        password:
          type: string
          format: password
          example: pass123
        birthdate:
          type: string
          format: date
          example: 2005-04-01

    ProjectRequest:
      type: object
      required: [name, color, owner_uid]
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        color:
          type: string
          example: "#2288FF"
        owner_uid:
          type: integer
          example: 1

    TimestampRequest:
      type: object
      required: [uid, pid, datum_in, checkin]
      properties:
        uid:
          type: integer
        pid:
          type: integer
        datum_in:
          type: string
          format: date
        checkin:
          type: string
          format: time
        datum_out:
          type: string
          format: date
          nullable: true
        checkout:
          type: string
          format: time
          nullable: true
        duration:
          type: string
          nullable: true

    Timestamp:
      allOf:
        - $ref: '#/components/schemas/TimestampRequest'
        - type: object
          properties:
            zid:
              type: integer

    RegisterRequest:
      type: object
      required: [surname, lastname, email, password, birthdate]
      properties:
        surname:
          type: string
        lastname:
          type: string
        email:
          type: string
          format: email
          example: max@example.com
        password:
          type: string
          format: password
          example: pass123
        birthdate:
          type: string
          format: date
          example: 2005-04-01
    Abrechnung:
      type: object
      properties:
        aid:
          type: integer
          description: Eindeutiger Beleg-Identifikator
        uid:
          type: integer
          description: Benutzer-ID
        pid:
          type: integer
          description: Projekt-ID
        name:
          type: string
          description: Name der Abrechnung
        date:
          type: string
          format: date
          description: Datum der Abrechnung
        price:
          type: number
          format: float
          description: Betrag in Euro
        category:
          type: string
          description: Kategorie der Abrechnung
        rechnung:
          type: string
          nullable: true
          description: Optionales Feld für weitere Rechnungsangaben
        user:
          type: object
          description: Verknüpfter Benutzer (Kurzreferenz)
          properties:
            id:
              type: integer
            name:
              type: string
        project:
          type: object
          description: Verknüpftes Projekt (Kurzreferenz)
          properties:
            id:
              type: integer
            name:
              type: string
      required:
        - aid
        - uid
        - pid
        - name
        - date
        - price
        - category